#include <stdio.h>
#include <mpi.h>

int main(int argc, char** argv) {
    int rank, size;
    int data;

    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    if (size < 2) {
        if (rank == 0) {
            printf("Se necesitan al menos 2 procesos para ejecutar este programa.\n");
        }
        MPI_Finalize();
        return 0;
    }

    if (rank == 0) {
        data = 500;
        MPI_Send(&data, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);
        printf("Proceso %d envió el valor %d al proceso 1.\n", rank, data);
    } else if (rank == 1) {
        MPI_Recv(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
        printf("Proceso %d recibió el valor %d del proceso 0.\n", rank, data);
    }

    MPI_Finalize();
    return 0;
}
